apply plugin: 'com.android.library'

if (!rootProject.optimizeForDevelopment) {
    apply from: '../gradle/plugins/checkstyle-android.gradle'
    apply from: '../gradle/plugins/findbugs-android.gradle'
}

if (rootProject.testCoverage) {
    apply plugin: 'jacoco'
}
apply plugin: 'maven'

repositories {
    jcenter()
}

dependencies {
    compile 'org.apache.james:apache-mime4j-core:0.7.2'
    compile 'org.apache.james:apache-mime4j-dom:0.7.2'
    compile 'commons-io:commons-io:2.4'
    compile 'com.jcraft:jzlib:1.0.7'
    compile 'com.beetstra.jutf7:jutf7:1.0.0'
    compile "com.android.support:support-annotations:${androidSupportLibraryVersion}"

    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.madgag.spongycastle:pg:1.51.0.0'

    testCompile 'com.squareup.okio:okio:1.6.0'
    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion 7

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // for using Apache HTTP Client
    useLibrary 'org.apache.http.legacy'

    buildTypes {
        debug {
            testCoverageEnabled rootProject.testCoverage
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(id: 'bintray', url: "https://api.bintray.com/maven/jberkel/maven/k9mail-library") {
                    def sha = "git rev-parse --short HEAD".execute().text
                    if (project.hasProperty('username') && project.hasProperty('apikey')) {
                        authentication(userName: username, password: apikey)
                    }
                    pom.project {
                        version "0.0.1.$sha"
                        groupId 'com.fsck.k9.mail'
                        artifactId 'lib'
                        packaging 'aar'
                    }
                }
            }
        }
    }
}
